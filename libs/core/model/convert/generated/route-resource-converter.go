// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package generated

import (
	uuid "github.com/google/uuid"
	entity "libs/core/entity"
	model "libs/core/model"
)

type RouteResourceConverter struct{}

func (c *RouteResourceConverter) FromNewToEntity(source *model.NewRouteResource, target *entity.Route) {
	if source != nil {
		target.Path = source.Path
		target.Name = source.Name
		target.Description = source.Description
	}
}
func (c *RouteResourceConverter) FromUpdateToEntity(source *model.UpdateRouteResource, target *entity.Route) {
	if source != nil {
		target.ID = c.uuidUUIDToUuidUUID(source.ID)
		target.Path = source.Path
		target.Name = source.Name
		target.Description = source.Description
	}
}
func (c *RouteResourceConverter) ToModel(source *entity.Route, target *model.RouteResource) {
	if source != nil {
		target.ID = c.uuidUUIDToUuidUUID(source.ID)
		target.Path = source.Path
		target.Name = source.Name
		target.Description = source.Description
	}
}
func (c *RouteResourceConverter) uuidUUIDToUuidUUID(source uuid.UUID) uuid.UUID {
	var uuidUUID uuid.UUID
	for i := 0; i < len(source); i++ {
		uuidUUID[i] = source[i]
	}
	return uuidUUID
}

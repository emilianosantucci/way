// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package dto

import (
	http "libs/core/common/http"
	model2 "libs/core/model"

	uuid "github.com/google/uuid"
)

func NewRestApiResourceConverter() RestApiResourceConvert {
	return &RestApiResourceConverter{}
}

type RestApiResourceConverter struct{}

func (c *RestApiResourceConverter) FromNewToModel(source *NewRestApiResource, target *model2.NewRestApiResource) {
	if source != nil {
		target.Path = source.Path
		target.Method = http.ToHttpMethod(source.Method)
	}
}
func (c *RestApiResourceConverter) FromUpdateToModel(source *UpdateRestApiResource, target *model2.UpdateRestApiResource) error {
	if source != nil {
		uuidUUID, err := uuid.Parse(source.ID)
		if err != nil {
			return err
		}
		target.ID = uuidUUID
		target.Path = source.Path
		target.Method = http.ToHttpMethod(source.Method)
	}
	return nil
}
func (c *RestApiResourceConverter) ToDto(source *model2.RestApiResource, target *RestApiResource) {
	if source != nil {
		target.ID = c.uuidUUIDToUuidUUID(source.ID)
		target.Path = source.Path
		target.Method = http.ToString(source.Method)
	}
}
func (c *RestApiResourceConverter) uuidUUIDToUuidUUID(source uuid.UUID) uuid.UUID {
	var uuidUUID uuid.UUID
	for i := 0; i < len(source); i++ {
		uuidUUID[i] = source[i]
	}
	return uuidUUID
}

// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package mapper

import (
	uuid "github.com/google/uuid"
	model "libs/core/feature/resource/route/model"
	dto "libs/core/feature/resource/route/rest/dto"
)

type RestDtoMapper struct{}

func (c *RestDtoMapper) FromNewToModel(source *dto.NewRoute, target *model.NewRoute) {
	if source != nil {
		target.Path = source.Path
		target.Name = source.Name
		target.Description = source.Description
	}
}
func (c *RestDtoMapper) FromUpdateToModel(source *dto.UpdateRoute, target *model.UpdateRoute) error {
	if source != nil {
		uuidUUID, err := uuid.Parse(source.ID)
		if err != nil {
			return err
		}
		target.ID = uuidUUID
		target.Path = source.Path
		target.Name = source.Name
		target.Description = source.Description
	}
	return nil
}
func (c *RestDtoMapper) ToDto(source *model.Route, target *dto.Route) {
	if source != nil {
		target.ID = c.uuidUUIDToUuidUUID(source.ID)
		target.Path = source.Path
		target.Name = source.Name
		target.Description = source.Description
	}
}
func (c *RestDtoMapper) uuidUUIDToUuidUUID(source uuid.UUID) uuid.UUID {
	var uuidUUID uuid.UUID
	for i := 0; i < len(source); i++ {
		uuidUUID[i] = source[i]
	}
	return uuidUUID
}

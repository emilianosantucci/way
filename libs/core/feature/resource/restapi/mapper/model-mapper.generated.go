// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package mapper

import (
	uuid "github.com/google/uuid"
	http "libs/core/common/http"
	entity "libs/core/feature/resource/restapi/entity"
	model "libs/core/feature/resource/restapi/model"
)

type ModelMapper struct{}

func (c *ModelMapper) FromNewToEntity(source *model.NewRestApiResource, target *entity.RestApiResource) {
	if source != nil {
		target.Path = source.Path
		target.Method = http.ToString(source.Method)
	}
}
func (c *ModelMapper) FromUpdateToEntity(source *model.UpdateRestApiResource, target *entity.RestApiResource) {
	if source != nil {
		target.ID = c.uuidUUIDToUuidUUID(source.ID)
		target.Path = source.Path
		target.Method = http.ToString(source.Method)
	}
}
func (c *ModelMapper) ToModel(source *entity.RestApiResource, target *model.RestApiResource) {
	if source != nil {
		target.ID = c.uuidUUIDToUuidUUID(source.ID)
		target.Path = source.Path
		target.Method = http.ToHttpMethod(source.Method)
	}
}
func (c *ModelMapper) uuidUUIDToUuidUUID(source uuid.UUID) uuid.UUID {
	var uuidUUID uuid.UUID
	for i := 0; i < len(source); i++ {
		uuidUUID[i] = source[i]
	}
	return uuidUUID
}
